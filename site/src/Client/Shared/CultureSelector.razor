@using System.Globalization
@using TSITSolutions.ContactSite.Client.Infrastructure

@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

@foreach (var (displayName, cultureName) in LocalizerSettings.SupportedCulturesWithName)
    {
        <MudButton
            Variant="Variant.Filled"
            Color="@GetColorForButton(cultureName)"
            OnClick="@(() => CurrentCulture = cultureName)"
            Disabled="@(cultureName==CurrentCulture)">
            @displayName
        </MudButton>
    }

@code
{
    protected override Task OnInitializedAsync()
    {
        _currentCultureBackingField = CultureInfo.CurrentCulture.Name;
        return base.OnInitializedAsync();
    }

    private string _currentCultureBackingField = LocalizerSettings.NeutralCulture;

    private string CurrentCulture
    {
        get => _currentCultureBackingField;
        set
        {
            _currentCultureBackingField = value;
            LocalStorage.SetItemAsync("culture", value);
            NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
        }
    }
    
    private Color GetColorForButton(string cultureName)
    {
        return cultureName == CurrentCulture ? Color.Error : Color.Secondary;
    }
}