@inherits LayoutComponentBase
@inject StronglyTypedStringLocalizerForResource Localizer
@inject ILocalStorageService LocalStorage

<MudThemeProvider Theme="_theme" @bind-IsDarkMode="@IsDarkMode" />
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudIconButton
            Icon="@Icons.Material.Filled.Menu"
            Color="Color.Inherit"
            Edge="Edge.Start"
            OnClick="@(DrawerToggle)"/>
        @Localizer.CompanyName
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/thoooschuuu/ContactSite" Target="_blank" Edge="Edge.End"/>
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu/>
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="main-content">
            @Body
        </MudContainer>
    </MudMainContent>

    <MudAppBar Bottom="true" Fixed="true">
        <CultureSelector/>
        <MudSpacer/>
        <MudSwitch @bind-Checked="@_isDarkMode" Color="Color.Primary" T="bool" ThumbIcon="@Icons.Filled.DarkMode"/>
    </MudAppBar>
</MudLayout>

@code {
    bool _drawerOpen;
    bool _isDarkMode;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await LocalStorage.GetItemAsync<bool>("IsDarkMode");
            StateHasChanged();
        }
    }
    
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private bool IsDarkMode
    {
        get => _isDarkMode;
        set
        {
            LocalStorage.SetItemAsync("IsDarkMode", value);
            _isDarkMode = value;
        }
    }

    readonly MudTheme _theme = new()
    {
        Typography = new()
        {
            Default = new()
            {
                FontFamily = new[] { "Arimo", "Helvetica", "Arial", "sans-serif" }
            }
        }
    };

}