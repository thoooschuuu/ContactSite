@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorage
@inject IStringLocalizer<Resource> Localizer

<MudThemeProvider @ref="@_mudThemeProvider" Theme="_theme" @bind-IsDarkMode="@IsDarkMode" />
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton
            Icon="@Icons.Material.Filled.Menu"
            Color="Color.Inherit"
            Edge="Edge.Start"
            OnClick="@(DrawerToggle)"/>
        <MudImage Src="images/logo-without-text-nobackground.svg" Height="64"  />
        <MudText Typo="Typo.body1">@Localizer["CompanyName"]</MudText>
        
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/thoooschuuu/ContactSite" Target="_blank" Edge="Edge.End"/>
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="main-content">
            @Body
        </MudContainer>
    </MudMainContent>

    <MudAppBar Bottom="true" Fixed="true">
        <CultureSelector/>
        <MudSpacer/>
        <MudToggleIconButton 
            @bind-Toggled="@IsDarkMode"
            Icon="@Icons.Material.Filled.DarkMode"
            ToggledIcon="@Icons.Material.Filled.DarkMode"/>
        <MudText>@Localizer["Main_DarkMode_Text"] @(IsDarkMode ? @Localizer["Main_DarkMode_On"] : @Localizer["Main_DarkMode_Off"])</MudText>
    </MudAppBar>
</MudLayout>

@code {
    const string IsDarkModeStorageKey = "IsDarkMode";
    bool _drawerOpen;
    bool _isDarkMode;
    
    private MudThemeProvider? _mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if(await LocalStorage.ContainKeyAsync(IsDarkModeStorageKey))
            {
                IsDarkMode = await LocalStorage.GetItemAsync<bool>(IsDarkModeStorageKey);
            }
            else
            {
                IsDarkMode = await _mudThemeProvider!.GetSystemPreference();
            }
            StateHasChanged();
        }
    }
    
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private bool IsDarkMode
    {
        get => _isDarkMode;
        set
        {
            LocalStorage.SetItemAsync(IsDarkModeStorageKey, value);
            _isDarkMode = value;
        }
    }

    readonly MudTheme _theme = new()
    {
        PaletteLight = new PaletteLight
        {
            AppbarBackground = "rgba(255, 194, 80, 1)"
        },
        PaletteDark = new PaletteDark
        {
            AppbarBackground = "rgba(18, 19, 19, 1)"
        }
    };

}