using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using TSITSolutions.StringLocalizerSourceGenerator.Tests.Integration.Helper;

namespace TSITSolutions.StringLocalizerSourceGenerator.Tests.Integration;

public class StronglyTypedStringLocalizerGeneratorTests
{
    private readonly Compilation _inputCompilation;

    public StronglyTypedStringLocalizerGeneratorTests()
    {
        var source = new SourceCodeBuilder()
            .InNamespace("ContactSite")
            .WithCode(@"
/// <summary>
///   A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
// This class was auto-generated by the StronglyTypedResourceBuilder
// class via a tool like ResGen or Visual Studio.
// To add or remove a member, edit your .ResX file then rerun ResGen
// with the /str option, or rebuild your VS project.
[global::System.CodeDom.Compiler.GeneratedCodeAttribute(""System.Resources.Tools.StronglyTypedResourceBuilder"", ""17.0.0.0"")]
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
public class Resource {
    
    private static global::System.Resources.ResourceManager resourceMan;
    
    private static global::System.Globalization.CultureInfo resourceCulture;
    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(""Microsoft.Performance"", ""CA1811:AvoidUncalledPrivateCode"")]
    internal Resource() {
    }
    
    /// <summary>
    ///   Returns the cached ResourceManager instance used by this class.
    /// </summary>
    [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
    public static global::System.Resources.ResourceManager ResourceManager {
        get {
            if (object.ReferenceEquals(resourceMan, null)) {
                global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager(""TSITSolutions.ContactSite.Client.Shared.Resources.Resource"", typeof(Resource).Assembly);
                resourceMan = temp;
            }
            return resourceMan;
        }
    }
        
    /// <summary>
    ///   Looks up a localized string similar to Thomas Schulze IT Solutions.
    /// </summary>
    public static string CompanyName {
        get {
            return ResourceManager.GetString(""CompanyName"", resourceCulture);
        }
    }
}")
            .Build();

        _inputCompilation = new CompilationBuilder()
            .WithDefaultReferences()
            .WithNetStandard20References()
            .WithSourceCode(source)
            .Build();
    }
    
    [Fact]
    public void Test1()
    {
        GeneratorDriver driver = CSharpGeneratorDriver.Create(new StronglyTypedStringLocalizerGenerator());

        driver = driver.RunGeneratorsAndUpdateCompilation(_inputCompilation, out _, out _);

        var result = driver.GetRunResult();

        result.Should()
            .NotHaveDiagnostics()
            .And
            .NotHaveDiagnosticErrors()
            .And
            .HaveProducedSourceCode(@"using System;
using System.Collections.Generic;
using System.Text;
using Microsoft.Extensions.Localization;

namespace ContactSite
{
    public class StronglyTypedStringLocalizerForResource
    {
        private readonly IStringLocalizer<Resource> _localizer;

        public StronglyTypedStringLocalizerForResource(IStringLocalizer<Resource> localizer)
        {
            _localizer = localizer;
        }

        /// <summary>
        ///    Looks up a localized string similar to Thomas Schulze IT Solutions.
        /// </summary>
        public string CompanyName => _localizer[nameof(Resource.CompanyName)];
    }
}
");
    }
}